{
   "name": "conn-in-info-pedido",
   "config": {
           "version" : 85,
		   "description" : "Conector de entrada de dados transacional referente aos pedidos de creditos dos cartoes",
           "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
           "connection.url": "jdbc:sqlserver://10.1.1.1:1433;databaseName=Adquirente;selectMethod=cursor",
           "connection.user": "confluent_Machina_login",
           "connection.passingthroughportalword": "Machina-Pawword",
		   "poll.interval.ms": "15000",
           "mode": "timestamp+incrementing",
           "incrementing.column.name": "ID_PEDIDO",
           "timestamp.column.name": "DATA_HORA",
		   "incrementing.offset": "0",
		   "timestamp.offset": "0",
           "validate.non.null": "true",
           "query": "SELECT DISTINCT * FROM ( SELECT DISTINCT CAST(ecp.Id_EmpresaCargaDetalheProduto AS NUMERIC(16,0)) AS ID_PEDIDO, ARQ.DATASTATUS AS DATA_HORA, CB.ID_ARQUIVOCARGASTD AS ID_ARQUIVO, EC.ID_CARGAMachinaEFICIO AS ID_CARGA, GE.ID_GRUPOEMPRESA AS CD_GRUPO, GE.NOME AS NM_GRUPO, PEMG.CPF AS CNPJ_RH_GRUPO, SGE.ID_GRUPOEMPRESA AS CD_SUB_GRUPO, SGE.NOME AS NM_SUB_GRUPO, PEMS.CPF AS CNPJ_RH_SUBGRUPO, ES.ID_EMPRESA AS CD_EMPRESA, ES.CPF AS CNPJ_CARGA , ES.NOME AS DESC_CLIENTE_CARGA, PF_SOLIC.CPF CNPJ_SOLICITANTE, CB.DATAPROCESSAMENTO AS DT_ENTRADA_PEDIDO, FU.ID_EMPRESA AS CD_CLIENTE_RH_CARGA, EMP.ID_EMPRESA AS CD_CLIENTE_RH_SOLIC, BE.DATAEMISSAO DT_EMISSAO_TITULO, BE.ID_BOLETO AS ID_BOLETO_PEDIDO, TB.DESCRICAO AS TIPO_BOLETO, PRO.ID_PRODUTO AS CD_PRODUTO, PRO.DESCRICAO AS DESC_PRODUTO, ARQ.TIPOPAGAMENTOPEDIDO AS TIPO_PAGTO, PGE.VALOR AS TIPO_RECEBIMENTO, CB.DATAAGENDAMENTO AS DT_AGENDAMENTO_CREDITO, CB.DATAPROCESSAMENTOCARGA as DT_LIBERACAO_CREDITO, BE.DATAVENCIMENTO AS DT_VENCTO_COBRANCA, EP.DATAENTRADAPAGAMENTO AS DT_BAIXA_PAGTO, EP.DATAPAGAMENTO AS DT_PAGTO_PEDIDO, ARQ.DATACANCELAMENTOPEDIDO AS DT_CANCELAMENTO, PF.ID_PESSOAFISICA AS ID_PORTADOR, PF.NOME AS NOME_PORTADOR, PF.CPF AS CPF, PF_SOLIC.NOME AS DESC_CLIENTE_SOLICITANTE, Z.DESCRICAO AS STATUS_CARGA, ECP.VALOR AS VL_CARGA_PORTADOR, ARQ.VALORESPERADO AS VL_TOTAL_ESPERADO_GRUPO, VALOR_PROCESSADO.VALOR AS VL_TOTAL_PROCESSADO_GRUPO, CF.STATUS AS CD_STATUS_NF, SDC.DESCRICAO AS DESC_STATUS_NF, CF.NUMERONF AS NUMERO_NF, CF.ID_CARGACONTROLEFINANCEIRO AS CD_CARGA_CONTROLE_FINANCEIRO FROM EMPRESASCARGAS EC INNER JOIN CARGASMachina CB (NOLOCK) ON (EC.ID_CARGAMachinaEFICIO = CB.ID_CARGAMachinaEFICIO) INNER JOIN ARQUIVOCARGASTD ARQ (NOLOCK) ON (ARQ.ID_ARQUIVOCARGASTD = CB.ID_ARQUIVOCARGASTD) INNER JOIN CARGACONTROLEFINANCEIRO CF (NOLOCK) ON (CF.ID_CARGACONTROLEFINANCEIRO = CB.ID_CARGACONTROLEFINANCEIRO) INNER JOIN STATUSDESCRICOES SDC (NOLOCK) ON (SDC.STATUS = CF.STATUS AND CODIGOSTATUS = 116) INNER JOIN BOLETOSEMITIDOS BE (NOLOCK) ON (BE.ID_BOLETO = CF.ID_BOLETO) INNER JOIN TIPOBOLETO TB (NOLOCK) ON (TB.ID_TIPOBOLETO = BE.ID_TIPOBOLETO) INNER JOIN GRUPOSEMPRESAS SGE (NOLOCK) ON (SGE.ID_GRUPOEMPRESA = CB.ID_GRUPOEMPRESA) INNER JOIN EMPRESAS EMP (NOLOCK) ON (EMP.ID_EMPRESA = SGE.ID_EMPRESAPRINCIPAL) INNER JOIN PESSOAS PEMS (NOLOCK) ON EMP.ID_PESSOA = PEMS.ID_PESSOAFISICA INNER JOIN GRUPOSEMPRESAS GE (NOLOCK) ON ISNULL(SGE.ID_GRUPOEMPRESAPAI, SGE.ID_GRUPOEMPRESA) = GE.ID_GRUPOEMPRESA  INNER JOIN EMPRESAS EMG (NOLOCK) ON (EMG.ID_EMPRESA = GE.ID_EMPRESAPRINCIPAL) INNER JOIN PESSOAS PEMG (NOLOCK) ON EMG.ID_PESSOA = PEMG.ID_PESSOAFISICA INNER JOIN PARAMETROSGRUPOSEMPRESAS PGE (NOLOCK) ON (PGE.ID_GRUPOEMPRESA = CB.ID_GRUPOEMPRESA AND ID_PARAMETRO = 35 /* PRE OU POS */) INNER JOIN PESSOASFISICAS PF_SOLIC (NOLOCK) ON (EMP.ID_PESSOA = PF_SOLIC.ID_PESSOAFISICA) INNER JOIN EMPRESASCARGASDETALHES ECD (NOLOCK) ON (ECD.ID_EMPRESACARGA = EC.ID_EMPRESACARGA) INNER JOIN EMPRESASCARGASDETALHESPRODUTOS ECP (NOLOCK) ON (ECP.ID_EMPRESACARGADETALHE = ECD.ID_EMPRESACARGADETALHE) INNER JOIN FUNCIONARIOSPRODUTOS FP (NOLOCK) ON (FP.ID_FUNCIONARIOSPRODUTOS = ECP.ID_FUNCIONARIOSPRODUTOS) INNER JOIN FUNCIONARIOS FU (NOLOCK) ON (FU.ID_FUNCIONARIO = FP.ID_FUNCIONARIO) INNER JOIN CONTAS C (NOLOCK) ON (C.ID_CONTA = FP.ID_CONTA) INNER JOIN PRODUTOS PRO (NOLOCK) ON (PRO.ID_PRODUTO = C.ID_PRODUTO) INNER JOIN PESSOASFISICAS PF (NOLOCK) ON (PF.ID_PESSOAFISICA = FU.ID_PESSOAFISICA) LEFT JOIN EVENTOSEXTERNOSPAGAMENTOS EP (NOLOCK) ON BE.ID_EVENTOPAGAMENTO = EP.ID_EVENTOPAGAMENTO CROSS APPLY (SELECT C.ID_ARQUIVOCARGASTD AS ID_ARQUIVO , SUM(EM.VALOR) AS VALOR FROM CARGASMachina C INNER JOIN EMPRESASCARGAS EM ON EM.ID_CARGAMachinaEFICIO = C.ID_CARGAMachinaEFICIO WHERE C.ID_ARQUIVOCARGASTD = ARQ.ID_ARQUIVOCARGASTD GROUP BY C.ID_ARQUIVOCARGASTD ) AS VALOR_PROCESSADO OUTER APPLY ( SELECT P.CPF, EMP.ID_EMPRESA, P.NOME FROM PESSOASFISICAS P INNER JOIN EMPRESAS EMP ON (EMP.ID_PESSOA = P.ID_PESSOAFISICA) ) AS ES OUTER APPLY ( SELECT SD.DESCRICAO FROM STATUSDESCRICOES SD INNER JOIN STATUS ST ON (ST.CODIGOSTATUS = SD.CODIGOSTATUS) WHERE ST.DESCRICAO = 'CARGASMachina' AND SD.STATUS = CB.[STATUS] ) AS Z WHERE ES.ID_EMPRESA = EC.ID_EMPRESA AND ECP.STATUS NOT IN (4,5) ) AS PEDIDO",
           "quote.sql.identifiers": "NEVER",
           "topic.prefix": "topic-rh-pedido-conciliacao",
           "transforms":"createKey,extractInt",
           "transforms.createKey.type":"org.apache.kafka.connect.transforms.ValueToKey",
           "transforms.createKey.fields":"ID_PEDIDO",
           "transforms.extractInt.type":"org.apache.kafka.connect.transforms.ExtractField$Key",
           "transforms.extractInt.field":"ID_PEDIDO",
           "value.converter.schema.registry.basic.auth.user.info": "Machina-Pawword",
           "key.converter.schema.registry.basic.auth.user.info": "Machina-Pawword",
           "key.converter" : "org.apache.kafka.connect.json.JsonConverter",
           "key.converter.schema.registry.url" : "https://machina-aws-clusters.us-east-2.aws.confluent.cloud",
           "value.converter" : "org.apache.kafka.connect.json.JsonConverter",
           "value.converter.schema.registry.url" : "https://machina-aws-clusters.us-east-2.aws.confluent.cloud",
           "internal.key.converter":"org.apache.kafka.connect.json.JsonConverter",
           "internal.value.converter":"org.apache.kafka.connect.json.JsonConverter",
           "internal.key.converter.schemas.enable":true,
           "internal.value.converter.schemas.enable":true
        }
}