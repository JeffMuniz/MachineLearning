{
  "name": "conn-in-info-agendamento-pedido",
  "config": {
    "version": 1,
    "description": "Conector de entrada de dados transacional referente a Info Agendamento Pedido",
    "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
    "connection.url": "jdbc:sqlserver://{{ENV_DB_HOST}}:{{ENV_DB_PORT}};databaseName={{ENV_DB_BLUE_NAME}}",
    "connection.user": "{{ENV_DB_USER}}",
    "connection.passingthroughportalword": "{{ENV_DB_passingthroughportalword}}",
    "poll.interval.ms": "60000",
    "mode": "timestamp+incrementing",
    "incrementing.column.name": "id_boleto_pedido",
    "timestamp.column.name": "data_hora",
    "incrementing.offset": "0",
    "timestamp.offset": "0",
    "validate.non.null": true,
    "query": "SELECT * FROM ( SELECT  be.dataemissao AS dt_emissao_titulo, pes_gru.cpf AS cnpj_solicitante, pes_gru.nome AS desc_cliente_solicitante, emp_gru.id_empresa AS cd_cliente_rh_solic, tb.descricao AS tipo_boleto, cast((CASE WHEN be.id_tipoboleto = 9 THEN be.nossonumero ELSE NULL END) AS VARCHAR(100)) AS nosso_numero, arq.tipopagamentopedido AS tipo_recebimento, cb.dataprocessamento AS dt_entrada_pedido, cb.dataagendamento AS dt_liberacao_pedido, cast(be.datavencimento as datetime) AS dt_vencto_cobranca, sd_ecdp.descricao AS status_carga, be.valorboleto + ABS(COALESCE(be.valordesconto, 0)) AS vl_carga, ABS(COALESCE(be.valordesconto, 0)) AS vl_credito_utilizado, be.valorboleto AS vl_cobranca, be.id_boleto AS id_boleto_pedido, arq.id_arquivocargastd AS id_arquivo, ccf.id_cargacontrolefinanceiro AS cd_carga_controle_financeiro, cast(cb.status as int) AS status_carga_maceficio, cast(ecdp.status as int) AS status_empresa_carga_detalhe_produto, 'VISA' AS tipo_bandeira, cb.dataprocessamento AS data_hora FROM arquivocargastd arq(nolock) INNER JOIN cargasCredito cb(nolock) ON arq.id_arquivocargastd = cb.id_arquivocargastd INNER JOIN statusdescricoes sd_cb (nolock) ON cb.status = sd_cb.status AND sd_cb.codigostatus = 100 INNER JOIN cargacontrolefinanceiro ccf (nolock) ON cb.id_cargacontrolefinanceiro = ccf.id_cargacontrolefinanceiro INNER JOIN statusdescricoes sd_ccf (nolock) ON ccf.status = sd_ccf.status AND sd_ccf.codigostatus = 116 INNER JOIN empresascargas ec (nolock) ON cb.id_cargamaceficio = ec.id_cargamaceficio INNER JOIN empresascargasdetalhes ecd (nolock) ON ec.id_empresacarga = ecd.id_empresacarga INNER JOIN empresascargasdetalhesprodutos ecdp (nolock) ON ecd.id_empresacargadetalhe = ecdp.id_empresacargadetalhe INNER JOIN statusdescricoes sd_ecdp (nolock) ON ecdp.status = sd_ecdp.status AND sd_ecdp.codigostatus = 105 INNER JOIN funcionariosprodutos fp (nolock) ON ecdp.id_funcionariosprodutos = fp.id_funcionariosprodutos INNER JOIN funcionarios fun (nolock) ON fp.id_funcionario = fun.id_funcionario INNER JOIN pessoas pes_fun (nolock) ON fun.id_pessoafisica = pes_fun.id_pessoafisica INNER JOIN contas con (nolock) ON fp.id_conta = con.id_conta INNER JOIN produtos pro (nolock) ON con.id_produto = pro.id_produto INNER JOIN boletosemitidos be (nolock) ON ccf.id_boleto = be.id_boleto INNER JOIN tipoboleto tb (nolock) ON be.id_tipoboleto = tb.id_tipoboleto INNER JOIN empresas emp (nolock) ON cb.id_empresa = emp.id_empresa INNER JOIN pessoas pes_emp (nolock) ON emp.id_pessoa = pes_emp.id_pessoafisica INNER JOIN gruposempresas gru (nolock) ON cb.id_grupoempresa = gru.id_grupoempresa INNER JOIN empresas emp_gru (nolock) ON gru.id_empresaprincipal = emp_gru.id_empresa INNER JOIN pessoas pes_gru (nolock) ON emp_gru.id_pessoa = pes_gru.id_pessoafisica WHERE cb.status NOT IN ( 6) GROUP BY be.dataemissao, pes_gru.cpf, emp_gru.id_empresa, tb.descricao, be.id_tipoboleto, be.nossonumero, arq.tipopagamentopedido, cb.dataprocessamento, cb.dataagendamento, be.datavencimento, be.datavencimento, pes_gru.nome, sd_ecdp.descricao, be.valorboleto, be.valordesconto, sd_ccf.descricao, ccf.numeronf, be.id_boleto, arq.id_arquivocargastd, ccf.id_cargacontrolefinanceiro, cb.status, ecdp.status  ) AS InfoAgendamentoPedido",
    "quote.sql.identifiers": "NEVER",
    "topic.prefix": "topic-info-agendamento-pedido",
    "transforms": "createKey,extractInt",
    "transforms.createKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
    "transforms.createKey.fields": "id_boleto_pedido",
    "transforms.extractInt.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractInt.field": "id_boleto_pedido",
    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schema.registry.url": "{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "value.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "key.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter.schema.registry.url": "{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "internal.key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "internal.value.converter": "org.apache.kafka.connect.json.JsonConverter",
    "internal.key.converter.schemas.enable": true,
    "internal.value.converter.schemas.enable": true
  }
}