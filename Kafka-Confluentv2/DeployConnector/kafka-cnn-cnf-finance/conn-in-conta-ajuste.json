{
  "name": "conn-in-conta-ajuste",
  "config": {
    "version" : 1,
    "description" : "Conector de entrada de dados referente a ajuste de credito para o portador",
    "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
    "connection.url": "jdbc:sqlserver://{{ENV_DB_HOST}}:{{ENV_DB_PORT}};databaseName={{ENV_DB_BLUE_NAME}}",
    "connection.user": "{{ENV_DB_USER}}",
    "connection.passingthroughportalword": "{{ENV_DB_passingthroughportalword}}",
    "topic.prefix": "topic-conn-conf-conta-ajuste",
    "poll.interval.ms": 60000,
    "mode": "timestamp+incrementing",
    "timestamp.column.name": "dataAjuste",
    "timestamp.initial": -1,
    "incrementing.column.name": "idAjuste",
    "incrementing.offset": "0",
    "validate.non.null": true,
    "query": "SELECT * FROM (SELECT EEA.Id_EventoAjuste AS idAjuste, IIF(TA.FlagCredito = 1, 'CREDITO', 'DEBITO') AS tipoOperacao, CAST(EEA.Valor AS NUMERIC(15,2)) AS valor, EEA.Id_Conta AS idContaDigital, EEA.DataOrigem AS dataAjuste FROM EventosExternosAjustes EEA(NOLOCK) INNER JOIN TiposAjustes TA (NOLOCK) ON EEA.Id_TipoAjuste = TA.Id_Ajuste INNER JOIN Contas C (NOLOCK) ON EEA.Id_Conta = C.Id_Conta INNER JOIN PessoasFisicas PF (NOLOCK) ON C.Id_Pessoa = PF.Id_PEssoaFisica INNER JOIN TiposRelatoriosContabeis TRC (NOLOCK) ON TRC.TipoValor = 'Valor de pagamento' AND TRC.Id_Relatorio = CASE WHEN TA.FlagCredito = 0 THEN 35 WHEN TA.FlagCredito = 1 THEN 34 END  LEFT JOIN EventosExternosCompras EEC (NOLOCK) ON EEA.Id_EventoExternoOriginal = EEC.Id_EventoCompra  LEFT JOIN Adquirentes A (NOLOCK) ON EEC.Id_Adquirente = A.Id_Adquirente  LEFT JOIN Estabelecimentos E (NOLOCK) ON EEC.Id_Estabelecimento = E.Id_Estabelecimento  WHERE EEA.Status = 2 AND TA.id_Ajuste in (633, 610, 5, 9, 368, 369, 1052, 1063)) AS AjusteFinanceiro",
    "key.converter.schema.registry.url" : "https://{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "value.converter.schema.registry.url" : "https://{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "value.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "key.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "auto.register.schemas":"true",
    "transforms":"createKey,extractInt,setSchemaName",
    "transforms.createKey.type":"org.apache.kafka.connect.transforms.ValueToKey",
    "transforms.createKey.fields":"idAjuste",
    "transforms.extractInt.type":"org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractInt.field":"idAjuste",
    "transforms.setSchemaName.type":"org.apache.kafka.connect.transforms.SetSchemaMetadata$Value",
    "transforms.setSchemaName.schema.name":"br.com.mac-edu.schema.ConnConfirmacaoContaAjusteValue",
    "key.converter":"io.confluent.connect.avro.AvroConverter",
    "value.converter":"io.confluent.connect.avro.AvroConverter",
    "key.converter.basic.auth.credentials.source": "USER_INFO", 
    "value.converter.basic.auth.credentials.source": "USER_INFO"
   }
 }