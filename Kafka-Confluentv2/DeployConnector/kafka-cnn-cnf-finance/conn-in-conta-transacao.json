{
  "name": "conn-in-conta-transacao",
  "config": {
    "version" : 1,
    "description" : "Conector de entrada de dados referente a efetivacao de credito para o portador",
    "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
    "connection.url": "jdbc:sqlserver://{{ENV_DB_HOST}}:{{ENV_DB_PORT}};databaseName={{ENV_DB_BLUE_NAME}}",
    "connection.user": "{{ENV_DB_USER}}",
    "connection.passingthroughportalword": "{{ENV_DB_passingthroughportalword}}",
    "topic.prefix": "topic-conn-conf-conta-transacao",
    "poll.interval.ms": 60000,
    "mode": "incrementing",
    "incrementing.column.name": "idTransacao",
    "incrementing.offset": "0",
    "validate.non.null": true,
    "query": "SELECT * FROM (SELECT fp.Id_Conta AS idContaDigital, ecp.Id_EmpresaCargaDetalheProduto AS idTransacao, CAST(ecp.Valor AS NUMERIC(15,2)) AS valor, cb.DataProcessamentoCarga AS dataTransacao, 'CREDITO' as tipoOperacao FROM arquivocargastd arq INNER JOIN CargasCredito cb ON cb.ID_ARQUIVOCARGASTD = arq.ID_ARQUIVOCARGASTD INNER JOIN CargaControleFinanceiro cf ON cf.Id_CargaControleFinanceiro = cb.Id_CargaControleFinanceiro INNER JOIN EmpresasCargas ec ON ec.Id_CargaMacEdueficio = cb.Id_CargaMacEdueficio INNER JOIN EmpresasCargasDetalhes ecd ON ecd.Id_EmpresaCarga = ec.Id_EmpresaCarga INNER JOIN EmpresasCargasDetalhesProdutos ecp ON ecp.Id_EmpresaCargaDetalhe = ecd.Id_EmpresaCargaDetalhe INNER JOIN FuncionariosProdutos fp ON fp.Id_FuncionariosProdutos = ecp.Id_FuncionariosProdutos INNER JOIN BoletosEmitidos be on be.Id_Boleto = cf.Id_Boleto WHERE cb.DataProcessamentoCarga IS NOT NULL AND ecp.Status = 3 ) AS ContaTransacao " ,
    "key.converter.schema.registry.url" : "https://{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "value.converter.schema.registry.url" : "https://{{ENV_API_SCHEMA_REGISTRY_URL}}",
    "value.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "key.converter.schema.registry.basic.auth.user.info": "{{ENV_API_SCHEMA_REGISTRY_KEY}}:{{ENV_API_SCHEMA_REGISTRY_SECRET}}",
    "auto.register.schemas":"true",
    "transforms":"createKey,extractInt,setSchemaName",
    "transforms.createKey.type":"org.apache.kafka.connect.transforms.ValueToKey",
    "transforms.createKey.fields":"idTransacao",
    "transforms.extractInt.type":"org.apache.kafka.connect.transforms.ExtractField$Key",
    "transforms.extractInt.field":"idTransacao",
    "transforms.setSchemaName.type":"org.apache.kafka.connect.transforms.SetSchemaMetadata$Value",
    "transforms.setSchemaName.schema.name":"br.com.mac-edu.schema.ConnConfirmacaoContaTransacaoValue",
    "key.converter":"io.confluent.connect.avro.AvroConverter",
    "value.converter":"io.confluent.connect.avro.AvroConverter",
    "key.converter.basic.auth.credentials.source": "USER_INFO", 
    "value.converter.basic.auth.credentials.source": "USER_INFO"
   }
 }